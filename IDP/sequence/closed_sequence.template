vocabulary V{
    type index
    type patternID
    type value
    type frequency

    seq(patternID,index,value)
    support(patternID,frequency)
    subset(index,index)
    dominated(index)
    output(index)
}

theory T:V{
    // i1 is a subset of i2
    ! i1,i2 :  subset(i1,i2) <=> !j,k,e: j =< k & seq(i1,j,e) => seq(i2,k,e).

    {
        !i1,i2,s: dominated(i1) <- support(i1,s) & support(i2,s) & subset(i1,i2) & i1 ~= i2.
        !i:       output(i)     <- ~dominated(i).
    }
}

Structure S:V{
    seq = {(1,1,17);(1,2,24);(1,3,35);
           (2,1,17);(2,2,24);(2,3,25);(2,4,35);(2,5,62);
           (3,1,65);(3,2,64);(3,3,63);
           (4,1,65);(4,2,64);(4,3,63);(4,4,5);
           (5,1,10);(5,2,11)}
    support = {(1,5);(2,5);(3,7);(4,7);(5,11)}
}

procedure main(){
    printmodels(modelexpand(T,S))
}